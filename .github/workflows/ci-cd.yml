name: CI/CD - Epibuilder Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositories
        uses: actions/checkout@v3

      - name: Clone epibuilder sources
        run: |
          git clone https://github.com/bioinformatics-ufsc/epibuilder-core.git core
          git clone https://github.com/bioinformatics-ufsc/epibuilder-backend.git backend
          git clone https://github.com/bioinformatics-ufsc/epibuilder-frontend.git frontend

      - name: Set up Java 21 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21
          cache: 'maven'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build epibuilder-core
        run: |
          cd core
          mvn clean package
          mkdir -p ../core-build
          cp target/epibuilder-core-jar-with-dependencies.jar ../core-build/epibuilder-core.jar

      - name: Build backend
        run: |
          cd backend
          mvn package -DskipTests
          mkdir -p ../backend-build
          cp target/*.jar ../backend-build/epibuilder-backend.jar

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build
          ls -la dist/
          mkdir -p ../frontend-build/dist/epibuilder-frontend
          cp -r dist/epibuilder-frontend/* ../frontend-build/dist/epibuilder-frontend/

      - name: Prepare build context
        run: |
          mkdir build
          cp -r backend-build build/backend
          cp -r core-build build/core
          cp -r frontend-build build/frontend
          cp -r pipeline build/pipeline  
          cp bepipred3.zip build/
          cp requirements.txt build/
          cp nginx.conf build/
          cp entrypoint.sh build/
          cp epibuilder.sh build/


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image (Debian - CPU)
        run: |
          cd build
          docker build -f ../Dockerfile.debian -t ${{ secrets.DOCKER_USERNAME }}/epibuilder:debian-cpu .

      - name: Build Docker image (Ubuntu - GPU)
        run: |
          cd build
          docker build -f ../Dockerfile.ubuntu -t ${{ secrets.DOCKER_USERNAME }}/epibuilder:ubuntu-gpu .

      - name: Push Debian image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/epibuilder:debian-cpu

      - name: Push Ubuntu image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/epibuilder:ubuntu-gpu
